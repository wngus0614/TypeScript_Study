// 객체 타입을 정의하는 방법
// 1. object로 정의하기
// 2. 객체리터럴타입으로 정의하기
// 객체의 타입을 정의할 때에는 앞으로 object 보다는 객체 리터럴 타입을 사용하는게 좋다.
// 객체 리터럴 타입은 다음과 같이 중괄호를 열고 객체가 갖는 프로퍼티를 직접 나열해 만드는 타입이다.
let user1 = {
    id: 1,
    name: "이주현"
};
//특수한 프로퍼티 정의하기
//객체 타입을 정의할 때 특정 프로퍼티를 선택적이거나 읽기 전용으로 만드는 타입스크립트의 독특한 문법에 대해 살펴보자.
// 1. 선택적 프로퍼티(Optional Property)
let user2 = {
    id: 1,
    name: "이주현",
};
user2 = {
    name: "홍길동",
};
// 2. 읽기전용 프로퍼티(Readonly Property)
let user3 = {
    id: 1,
    name: "이주현",
};
export {};
// user.name = "dskfd"; // 오류 발생
//name 프로퍼티는 이제 읽기 전용 프로퍼티가 되었기 때문에 마지막 라인처럼 프로퍼티의 값을 수정하려고 하면 오류가 발생하게 된다. 
//이를 통해 의도치 않은 프로퍼티의 수정을 방지할 수 있다.
